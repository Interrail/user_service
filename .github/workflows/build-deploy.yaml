name: Build and Deploy Code

on: [ push,pull_request ]
jobs:
  job1:
    environment:
      name: testing
    env:
      POSTGRES_SERVER: ${{secrets.POSTGRES_SERVER}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      SMTP_PORT: ${{secrets.SMTP_PORT}}
      SMTP_HOST: ${{secrets.SMTP_HOST}}
      SMTP_USER: ${{secrets.SMTP_USER}}
      SMTP_PASSWORD: ${{secrets.SMTP_PASSWORD}}
      EMAILS_FROM_EMAIL: ${{secrets.EMAILS_FROM_EMAIL}}
      EMAIL_RESET_TOKEN_EXPIRE_HOURS: ${{secrets.EMAIL_RESET_TOKEN_EXPIRE_HOURS}}
      EMAIL_TEST_USER: ${{secrets.EMAIL_TEST_USER}}
      FIRST_SUPERUSER: ${{secrets.FIRST_SUPERUSER}}
      FIRST_SUPERUSER_PASSWORD: ${{secrets.FIRST_SUPERUSER_PASSWORD}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest 
          pytest
#      - name: Login to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN}}
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: ./
#          file: ./Dockerfile
#          builder: ${{ steps.buildx.outputs.name }}
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/user_service:latest
#          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/user_service:buildcache
#          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/user_service:buildcache,mode=max